<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - South Dakota Diaspora</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body class="CaroniFont">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">

            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <div>
                    <a href="@Url.Action("Index", "Home", new { area = ""})" class="navbar-brand @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "header-selected" : "")">Home</a>
                    @if (!Site.Helpers.GlobalMethods.IsLoggedIn(this.Session))
                    {
                        <a href="@Url.Action("Create", "Home", new { area = "" })" class="navbar-brand @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Create" ? "header-selected" : "")">Create Account</a>
                        <a href="@Url.Action("Login", "Home", new { area = "" })" class="navbar-brand @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Login" ? "header-selected" : "")">Log In</a>
                    }
                    else
                    {
                        if (Site.Helpers.GlobalMethods.IsOnMyUserDetailsPage(this.Session, this.ViewContext))
                        {
                            <a href="@Url.Action("Details", "Users", new { area = "", id = Session["UserID"].ToString() })" class="navbar-brand header-selected">@Session["Username"].ToString()</a>
                        }
                        else
                        {
                            <a href="@Url.Action("Details", "Users", new { area = "", id = Session["UserID"].ToString() })" class="navbar-brand">@Session["Username"].ToString()</a>
                        }

                        @Html.ActionLink("Log Out", "Logout", "Home", new { area = "" }, new { @class = "navbar-brand" })
                    }
                </div>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li @(ViewContext.RouteData.Values["controller"]?.ToString() == "Timeline" ? "class = header-selected" : "")>@Html.ActionLink("Timeline ⌚", "Index", "Timeline")</li>

                    @if (Site.Helpers.GlobalMethods.IsOnMyUserDetailsPage(this.Session, this.ViewContext))
                    {
                        <li>@Html.ActionLink("Users 🧙‍", "Index", "Users")</li>
                    }
                    else
                    {
                        <li @(ViewContext.RouteData.Values["controller"]?.ToString() == "Users" ? "class = header-selected" : "")>@Html.ActionLink("Users 🧙‍", "Index", "Users")</li>
                    }

                    <li @(ViewContext.RouteData.Values["controller"]?.ToString() == "Games" ? "class = header-selected" : "")>@Html.ActionLink("Games 🎲", "Index", "Games")</li>
                    <li>@Html.ActionLink("Shows/Videos 📺", "Index", "Shows")</li>
                    <li>@Html.ActionLink("Books/Articles 📚", "Index", "Books")</li>
                    <li>@Html.ActionLink("Projects 🧪", "Index", "Projects")</li>
                </ul>
            </div>
        </div>
    </div>
    <div>
        @while (Site.Helpers.GlobalMethods.NumberConfirmationMessages(this.Session) > 0)
        {
            string message = Site.Helpers.GlobalMethods.DequeueConfirmationMessage(this.Session);
            <div class = "confirmation-messages">@message</div>
        }
    </div>
    <div class="container body-content">
        @RenderBody()
    </div>

    @Scripts.Render("~/bundles/jquery")
    @*@Scripts.Render("~/bundles/bootstrap")*@
    @RenderSection("scripts", required: false)
</body>
</html>
