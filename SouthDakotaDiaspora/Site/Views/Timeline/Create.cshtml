@model Site.Models.Timeline.TimelineCreateViewModel

@{
    ViewBag.Title = "Create";
}


@*DATE AND TIME PICKER*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    @Scripts.Render("~/bundles/jquerytimepicker")
    @Styles.Render("~/Content/jquerytimepicker")

    <script>
        $(document).ready(function () {
            $('input[type=datetime]').datetimepicker({
                numberOfMonths: 3,
                minDate: -30,
                maxDate: 30,
                timeFormat: 'hh:mm tt z',
                controlType: 'select',
                oneLine: true,
                stepMinute: 5,
                timezoneList: [
                    { value: -480, label: 'Pacific' },
                    { value: -420, label: 'Mountain' },
                    { value: -360, label: 'Central' },
                    { value: -300, label: 'Eastern' }
                ]
            }).datetimepicker("setDate", new Date());


            $(".ActivityTypeDropdown")
                .prop("disabled", true)
                .change(function () {
                    $("#ActivityID").val($(this).val());
                });
            $(".ActivityTypeRadio").change(function () {
                if ($("#gamebutton:checked").length > 0) {
                    $(".ActivityTypeDropdown").prop("disabled", true);
                    $("#gamelist").prop("disabled", false);
                    $("#ActivityID").val($("#gamelist").val());
                }
                if ($("#showbutton:checked").length > 0) {
                    $(".ActivityTypeDropdown").prop("disabled", true);
                    $("#showlist").prop("disabled", false);
                    $("#ActivityID").val($("#showlist").val());
                }
                if ($("#bookbutton:checked").length > 0) {
                    $(".ActivityTypeDropdown").prop("disabled", true);
                    $("#booklist").prop("disabled", false);
                    $("#ActivityID").val($("#booklist").val());
                }
                if ($("#projectbutton:checked").length > 0) {
                    $(".ActivityTypeDropdown").prop("disabled", true);
                    $("#projectlist").prop("disabled", false);
                    $("#ActivityID").val($("#projectlist").val());
                }
            });

            $("#playerlimitunlimitedcheckbox").change(function () {
                if ($("#playerlimitunlimitedcheckbox:checked").val()) {
                    $("#playerlimitslider").prop("disabled", true);
                }
                else {
                    $("#playerlimitslider").prop("disabled", false);
                }
            });

        });
    </script>
}



<h2>Create</h2>

@using (Html.BeginForm(Html.BeginForm("Create", "Timeline", FormMethod.Post, new { @autocomplete = "off" })))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>TimelineEvent</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <hr />

    <h3 class="text-left">Event Type:</h3>
    @Html.Hidden("ActivityID")
    <div class="col-md-12" style="@(Model.GameSelection.Count <= 0 ? "display: none;" : "")">
        <span>Game</span>
        @Html.RadioButton("ActivityType", "game", false, new { @class = "ActivityTypeRadio", @id = "gamebutton" })
        @Html.DropDownList("gamelist", @Model.GameSelection, new { @class = "ActivityTypeDropdown" })
    </div>

    <div class="col-md-12" style="@(Model.ShowSelection.Count <= 0 ? "display: none;" : "")">
        <span>Movie/Show</span>
        @Html.RadioButton("ActivityType", "show", false, new { @class = "ActivityTypeRadio", @id = "showbutton" })
        @Html.DropDownList("showlist", @Model.ShowSelection, new { @class = "ActivityTypeDropdown" })
    </div>

    <div class="col-md-12" style="@(Model.BookSelection.Count <= 0 ? "display: none;" : "")">
        <span>Book/Article</span>
        @Html.RadioButton("ActivityType", "book", false, new { @class = "ActivityTypeRadio", @id = "bookbutton" })
        @Html.DropDownList("booklist", @Model.BookSelection, new { @class = "ActivityTypeDropdown" })
    </div>

    <div class="col-md-12" style="@(Model.ProjectSelection.Count <= 0 ? "display: none;" : "")">
        <span>Project</span>
        @Html.RadioButton("ActivityType", "project", false, new { @class = "ActivityTypeRadio", @id = "projectbutton" })
        @Html.DropDownList("projectlist", @Model.ProjectSelection, new { @class = "ActivityTypeDropdown" })
    </div>

    <hr />

    <div class="form-group col-md-12">
        @Html.LabelFor(model => model.Tevent.Title, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Tevent.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tevent.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-12">
        @Html.LabelFor(model => model.Tevent.StartTime, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Tevent.StartTime, new { htmlAttributes = new { @class = "form-control", @id = "start-time-picker" } })
            @Html.ValidationMessageFor(model => model.Tevent.StartTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-md-12">
        @Html.LabelFor(model => model.Tevent.EndTime, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Tevent.EndTime, new { htmlAttributes = new { @class = "form-control", @id = "end-time-picker" } })
            @Html.ValidationMessageFor(model => model.Tevent.EndTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3 class="text-left">Event Capacity</h3>
    <div class="form-group col-md-12">
        <div class="col-md-1">
            <label class="form-label" for="playerlimitunlimitedcheckbox">Unlimited</label>
            <input name="PlayerLimitUnlimited" class="checkbox-inline" checked="checked" type="checkbox" id="playerlimitunlimitedcheckbox" />
        </div>

        <div class="col-md-11">
            <label class="form-label" for="playerlimitslider">Maximum Attendees (includes host)</label>
            <input name="PlayerLimit" class="form-range" disabled="disabled" type="range" min="1" max="16" value="1" id="playerlimitslider" oninput="this.nextElementSibling.value = this.value" />
            <output>1</output>
        </div>
    </div>


    <hr />

    <div class="form-group">
        <h3 class="text-left">Notifications</h3>
        <p><i>Notifications are used in discord to help you promote your event.</i></p>
        <div>
            <input name="NotifyCreated" class="checkbox-inline" checked="checked" type="checkbox" id="notifycreatedcheckbox" />
            <label>Notify when created</label>
        </div>
        <div>
            <input name="NotifyOneHour" class="checkbox-inline" checked="checked" type="checkbox" id="notifyonehourcheckbox" />
            <label>Notify one hour before</label>
        </div>
        <div>
            <input name="NotifyStarting" class="checkbox-inline" checked="checked" type="checkbox" id="notifystartingcheckbox" />
            <label>Notify on event start</label>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

